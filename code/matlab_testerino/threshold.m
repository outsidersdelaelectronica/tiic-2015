clear

n = 17;
FN = 1e-10;
M = zeros(n^4,3);
% log_Q_x4 = [0,86532344729558, 0,12573822039411, 0,00856440956266646, 0,000362971949174562,...
%     1,07133496602986E-05, 2,33509942141726E-07, 3,88790519206709E-09, 5,04413243889342E-11,...
%     5,15356619009042E-13, 4,16029561258561E-15, 2,64478933998883E-17, 1,31014241225023E-19,...
%     4,95765292223848E-22, 1,38535671195051E-24, 2,69602358531527E-27, 3,26460979049277E-30,...
%     1,85302018885184E-33];
% 
% log_Q_x3 = [0,747797148192655, 0,219313216577886, 0,0301499839490984, 0,00257902103026911, 
%     0,000153638218198313, 6,75882996554695E-06, 2,27129723893126E-07, 5,94753423054447E-09,
%     1,22645181434344E-10, 1,99829216186303E-12, 2,56400012621938E-14, 2,56352539929356E-16, 
%     1,95788599742381E-18, 1,10424402173362E-20, 4,33729831056261E-23, 1,06003217366094E-25,
%     1,21439531096594E-28];
% log_Q_x2 = [0,52914439805242, 0,343585956695848, 0,104577411377248, 0,0198055035074497, 
%     0,00261222431797009, 0,000254426843040583, 1,89297807257042E-05, 1,09746015802358E-06,
%     5,01051659035218E-08, 1,80747043148327E-09, 5,13464545051961E-11, 1,13660678783614E-12,
%     1,92194175882802E-14, 2,39992727429097E-16, 2,08704839521365E-18, 1,12930818471498E-20,
%     2,86440031242744E-23];
% 
% log_Q_x1 = [0,263393611744589, 0,366460677209862, 0,238996093832519, 0,0969839221349352, 
%     0,027408499733786, 0,005720034727051, 0,00091188959416755, 0,000113278210455596, 
%     1,10815640663083E-05, 8,56546014787117E-07, 5,2137583508781E-08, 2,47292886207657E-09, 
%     8,95988718143687E-11, 2,39729422914699E-12, 4,46700788039809E-14, 5,17913957147607E-16,
%     2,81474976710655E-18];
% 
% log_P_x4 = [0,0000152587890625, 0,000244140625, 0,0018310546875, 0,00854492187499999,
%     0,02777099609375, 0,066650390625, 0,1221923828125, 0,174560546875, 0,196380615234375,
%     0,174560546875, 0,1221923828125, 0,066650390625, 0,02777099609375, 0,00854492187499999,
%     0,0018310546875, 0,000244140625, 0,0000152587890625];

log_Q_x4 = [0.86532344729558, 0.12573822039411, 0.00856440956266646, 0.000362971949174562,...
    1.07133496602986e-05, 2.33509942141726e-07, 3.88790519206709e-09, 5.04413243889342e-11,...
    5.15356619009042e-13, 4.16029561258561e-15, 2.64478933998883e-17, 1.31014241225023e-19,...
    4.95765292223848e-22, 1.38535671195051e-24, 2.69602358531527e-27, 3.26460979049277e-30,...
    1.85302018885184e-33];

log_Q_x3 = [0.747797148192655, 0.219313216577886, 0.0301499839490984, 0.00257902103026911,... 
    0.000153638218198313, 6.75882996554695e-06, 2.27129723893126e-07, 5.94753423054447e-09,...
    1.22645181434344e-10, 1.99829216186303e-12, 2.56400012621938e-14, 2.56352539929356e-16,... 
    1.95788599742381e-18, 1.10424402173362e-20, 4.33729831056261e-23, 1.06003217366094e-25,...
    1.21439531096594e-28];
log_Q_x2 = [0.52914439805242, 0.343585956695848, 0.104577411377248, 0.0198055035074497,... 
    0.00261222431797009, 0.000254426843040583, 1.89297807257042e-05, 1.09746015802358e-06,...
    5.01051659035218e-08, 1.80747043148327e-09, 5.13464545051961e-11, 1.13660678783614e-12,...
    1.92194175882802e-14, 2.39992727429097e-16, 2.08704839521365e-18, 1.12930818471498e-20,...
    2.86440031242744e-23];

log_Q_x1 = [0.263393611744589, 0.366460677209862, 0.238996093832519, 0.0969839221349352,... 
    0.027408499733786, 0.005720034727051, 0.00091188959416755, 0.000113278210455596,... 
    1.10815640663083e-05, 8.56546014787117e-07, 5.2137583508781e-08, 2.47292886207657e-09,... 
    8.95988718143687e-11, 2.39729422914699e-12, 4.46700788039809e-14, 5.17913957147607e-16,...
    2.81474976710655e-18];

log_P_x4 = [0.0000152587890625, 0.000244140625, 0.0018310546875, 0.00854492187499999,...
    0.02777099609375, 0.066650390625, 0.1221923828125, 0.174560546875, 0.196380615234375,...
    0.174560546875, 0.1221923828125, 0.066650390625, 0.02777099609375, 0.00854492187499999,...
    0.0018310546875, 0.000244140625, 0.0000152587890625];
vectors_u = zeros(n^4,4);

x4 = 0;
x3 = 0;
x2 = 0;
x1 = 0;

for i = 1:n^4
    vectors_u(i,1) = x4;
    vectors_u(i,2) = x3;
    vectors_u(i,3) = x2;
    vectors_u(i,4) = x1;
    
    x1 = x1 +1;
    if ( x1 == n)
        x1 = 0;
        x2 = x2 +1;
        if ( x2 == n)
            x2 = 0;
            x3 = x3 +1;
            if ( x3 == n)
                x3 = 0;
                x4 = x4 +1;
            end
        end
    
    end
end

for i = 1:n^4
    P = log_P_x4(vectors_u(i,1) + 1)*log_P_x4(vectors_u(i,2) + 1)*...
        log_P_x4(vectors_u(i,3) + 1)*log_P_x4(vectors_u(i,4) + 1);
    
    Q = log_Q_x4(vectors_u(i,1) + 1)*log_Q_x3(vectors_u(i,2) + 1)*...
        log_Q_x2(vectors_u(i,3) + 1)*log_Q_x1(vectors_u(i,4) + 1);
    lel = log(P/Q);
    
    M(i,1) = P;
    M(i,2) = Q;
    M(i,3) = lel;
end

M_sorted = sortrows(M,3);

falso_negativo = 0;
falso_positivo = 0;
th = 0;
for i = n^4:-1:1
    falso_negativo = falso_negativo + M(i,2);
    th =M(i,3);
    if falso_negativo >= FN
        break;
    end
    
end
for j = n^4: -1:i
    falso_positivo = falso_positivo + M(i,1);
end
